

电量优化


使用时出现的错误：
1.json: unsupported value: NaN 
	有人用了描述：
	the problem started when reset the battery stats and enabled full-wake-history
	解决：重启手机再试就好了。

2.打开生成的HTML显示错误如下：
WARNING: Visualizer disabled. If you see this message, download the HTML then open it.
解决：需要翻墙访问谷歌服务。

3.进部署好的动脑服务器docker，显示错误如下：
{"UploadResponse":[{"sdkVersion":23,"historianV2Cs...

https://github.com/google/battery-historian/issues/64
解决：You need a network connection.需要翻墙。 动脑的centos无法翻墙访问谷歌服务导致。

4.进部署好的动脑服务器docker，没有显示错误，但是最上面提示了红色的颜色块，表示访问出错。
解决：无法翻墙访问谷歌服务导致。

=============================================================

重要的参数：WiFi、wake_lock(CPU/屏幕)、conn、mobile_ratio(蜂窝信号)

1.为了省电，有些工作可以放当手机插上电源的时候去做。往往这样的情况非常多。
	像这些不需要及时地和用户交互的操作可以放到后面处理。
	比如：360手机助手，当充上电的时候，才会自动清理手机垃圾，自动备份上传图片、联系人等到云端。

提问：拍照和图片的处理，他们可以做一些电量的优化吗？
假如现在没有充电，电量比较低，拍照动作是需要立马执行的，
但是图片处理（需要消耗大量的计算---电量的大量消耗）是否可以放在用户手机插上电源之后来处理？

如何立即获取手机当前充电状态，我们可以有针对性地对一些代码做优化。

2.有些工作可以当连上WiFi以后再做。

3.wake_lock
系统为了节省电量，CPU在没有任务忙的时候就会自动进入休眠。
有任务需要唤醒CPU高效执行的时候，就会给CPU加wake_lock锁。

大家经常犯的错误，我们很容易去唤醒CPU来干货，但是很容易忘记释放wake_lock.
解决：powerManager的API
记得添加权限：
<uses-permission android:name="android.permission.INTERNET"></uses-permission>
    <uses-permission android:name="android.permission.WAKE_LOCK"></uses-permission>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"></uses-permission>
  
  mWakelock.acquire();//唤醒CPU
  mWakelock.release();//记得释放CPU锁

//判断网络连接
   private boolean isNetWorkConnected() {
        ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();
        return (activeNetworkInfo!=null&&activeNetworkInfo.isConnected());
    }

有一些意外的情况，比如小米手机是做了同步心跳包（心跳对齐）(如果超过了这个同步的频率就会被屏蔽掉或者降频)，所有的app后台唤醒频率不能太高，比如每隔2S中去请求。

AlarmManager.setRepeating();

//---------------
如何去改进，对任务调度的优化。
//--------------
网络优化---也解决电量问题。

    public void setRepeating(int type, long triggerAtMillis,
            long intervalMillis, PendingIntent operation) {
        setImpl(type, triggerAtMillis, legacyExactLength(), intervalMillis, 0, operation,
                null, null, null, null, null);
    }

    public void setExact(int type, long triggerAtMillis, PendingIntent operation) {
        setImpl(type, triggerAtMillis, WINDOW_EXACT, 0, 0, operation, null, null, null,
                null, null);
    }

原因：
WINDOW_HEURISTIC:探试的，探索的;（意思：有范围浮动的，时间不确定的）
    private long legacyExactLength() {
        return (mAlwaysExact ? WINDOW_EXACT : WINDOW_HEURISTIC);
    }


锁屏和点亮屏幕的广播。监听。

如果电量采集不到，可能要进入手机的工程模式，打开电量日志采集。


python historian.py -a dongnaobugreport.txt > dongnaobugreport.txt.html


优化四：大量高频次的CPU唤醒及操作，我们最好把这些操作集中处理。
我们可以采取一些算法来解决。
可以借鉴谷歌的精髓，JobScheduler/GCM


python historian.py -a batterystat666s.txt > battery.html

电量优化---网络优化


